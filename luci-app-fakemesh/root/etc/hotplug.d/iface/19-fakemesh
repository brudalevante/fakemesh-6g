#!/bin/sh

[ "$ACTION" = ifup -o "$ACTION" = ifupdate ] || exit 0

interface=lan

enabled="$(uci get fakemesh.default.enabled)"
role="$(uci get fakemesh.default.role)"

[ "$enabled" = "1" ] && [ "$role" != "controller" ] && interface=meshx0

[ "$INTERFACE" = "$interface" ] || exit 0

#change hostname if mesh enabled
[ "$enabled" = "1" ] && {
	old_hostname="$(uci get system.@system[0].hostname || echo X-WRT)"
	new_hostname="$(uci get network.meshx0.hostname || echo $old_hostname)"
	[ "$old_hostname" != "$new_hostname" ] && {
		uci set system.@system[0].hostname="$new_hostname"
		uci commit system
		/etc/init.d/system reload
		/etc/init.d/umdns running && /etc/init.d/umdns restart
	}
}

/etc/init.d/umdns enabled && {

[ "$interface" = "meshx0" ] && uci get umdns.@umdns[0] && {
	old_net=$(uci get umdns.@umdns[0].network)
	new_net=$(for net in $old_net meshx0; do echo $net; done | sort | uniq)
	new_net=$(echo $new_net)
#FIXME: since umdns bug, this just an workaroud only
	new_net="meshx0"

	[ "$old_net" != "$new_net" ] && {
		uci delete umdns.@umdns[0].network >/dev/null 2>&1
		for net in $new_net; do
			uci add_list umdns.@umdns[0].network="$net"
		done
		uci commit umdns
		/etc/init.d/umdns reload
	}
	(sleep 60 && /etc/init.d/umdns reload) &
}
[ "$interface" = "lan" ] && uci get umdns.@umdns[0] && {
	old_net=$(uci get umdns.@umdns[0].network)
	new_net=$(for net in $old_net lan; do [ "$net" = "meshx0" ] || echo $net; done | sort | uniq)
	new_net=$(echo $new_net)
	[ "$old_net" != "$new_net" ] && {
		uci delete umdns.@umdns[0].network >/dev/null 2>&1
		for net in $new_net; do
			uci add_list umdns.@umdns[0].network="$net"
		done
		uci commit umdns
		/etc/init.d/umdns reload
	}
	(sleep 60 && /etc/init.d/umdns reload) &
}

} ##/etc/init.d/umdns enabled

###use usteer first
if /etc/init.d/usteer enabled; then
	old_net=$(uci get usteer.@usteer[0].network)
	new_net="$interface"
	[ "$old_net" != "$new_net" ] && {
		uci set usteer.@usteer[0].network="$new_net"
		uci commit usteer
		/etc/init.d/usteer restart
	}

else ### use dawn

status="$(ubus -S call network.interface.$INTERFACE status)"
[ -n "$status" ] && {
	. /usr/share/libubox/jshn.sh
	json_load "$status"
	json_select "ipv4-address" && {
		json_select 1 && {
			json_get_var address address
			json_get_var mask mask
			test -n "$address" && test -n "$mask" && {
				broadcast="$(ipcalc.sh "$address/$mask" | grep BROADCAST | cut -d= -f2)"
				uci get dawn.@network[0] && {
					old_broadcast="$(uci get dawn.@network[0].broadcast_ip)"
					[ "$broadcast" = "$old_broadcast" ] || {
						uci set dawn.@network[0].broadcast_ip="$broadcast"
						uci commit dawn
						/etc/init.d/dawn reload
					}
				}
			}
		}
	}
}

fi
